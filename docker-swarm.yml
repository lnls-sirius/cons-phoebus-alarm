---
version: '3.7'
services:
  alarm-server:
    image: lnlscon/alarm-server:v1.1
    networks:
      - host
    #volumes:
    #  - "/var/tmp/zoo:/opt/data/zookeeper:rw"
    #  - "/var/tmp/kafka:/opt/data/kafka-logs:rw"
    environment:
      ZOO_PORT: 2181
      KAFKA_PORT: 29094
    dns_search:
      - lnls-sirius.com.br 
      - abtlus.org.br
    dns:
      - 10.128.255.7
      - 10.0.0.71
      - 10.0.0.72
    deploy:
      placement:
        constraints:
          - node.hostname == CA-RaCtrl-CO-Srv-1
      replicas: 1
      restart_policy:
        condition: on-failure
  
  alarm-logger:
    image: lnlscon/alarm-logger:v1.1
    networks:
      - host
    environment:
      ES_PORT: 9202
      KAFKA_PORT: 29094
    dns_search:
      - lnls-sirius.com.br 
      - abtlus.org.br
    dns:
      - 10.128.255.7
      - 10.0.0.71
      - 10.0.0.72
    deploy:
      placement:
        constraints:
          - node.hostname == CA-RaCtrl-CO-Srv-1
      replicas: 1
      restart_policy:
        condition: on-failure

  es:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.8.2
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - http.cors.enabled=true
      - http.cors.allow-origin=*
      - discovery.type=single-node
    hostname: es
    ports:
      - 9202:9200
    dns_search:
      - lnls-sirius.com.br 
      - abtlus.org.br
    dns:
      - 10.128.255.7
      - 10.0.0.71
      - 10.0.0.72
    deploy:
      placement:
        constraints:
          - node.hostname == CA-RaCtrl-CO-Srv-1
      replicas: 1
      restart_policy:
        condition: on-failure

  kibana:
    image: docker.elastic.co/kibana/kibana:6.8.4
    hostname: kibana
    ports:
        - "5602:5601"
    environment:
      SERVER_NAME: epics.logging.kibana
      ELASTICSEARCH_HOSTS: http://es:9200
    dns_search:
      - lnls-sirius.com.br 
      - abtlus.org.br
    dns:
      - 10.128.255.7
      - 10.0.0.71
      - 10.0.0.72
    deploy:
      placement:
        constraints:
          - node.hostname == CA-RaCtrl-CO-Srv-1
      replicas: 1
      restart_policy:
        condition: on-failure

  zookeeper:
    image: "confluentinc/cp-zookeeper:5.2.1"
    hostname: zookeeper
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    dns_search:
      - lnls-sirius.com.br 
      - abtlus.org.br
    dns:
      - 10.128.255.7
      - 10.0.0.71
      - 10.0.0.72
    deploy:
      placement:
        constraints:
          - node.hostname == CA-RaCtrl-CO-Srv-1
      replicas: 1
      restart_policy:
        condition: on-failure

  kafka0:
    image: "confluentinc/cp-enterprise-kafka:5.2.1"
    hostname: kafka0
    ports:
      - '9092:9092'
      - '29094:29094'
    depends_on:
      - zookeeper
    environment:
      HOSTNAME_COMMAND: "docker info | grep ^Name: | cut -d' ' -f 2"
      KAFKA_BROKER_ID: 0
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: LISTENER_INTERNAL://:29092,LISTENER_EXTERNAL://:29094
      KAFKA_ADVERTISED_LISTENERS: LISTENER_INTERNAL://:29092,LISTENER_EXTERNAL://_{HOSTNAME_COMMAND}:29094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_INTERNAL:PLAINTEXT,LISTENER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_INTERNAL
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 100
    dns_search:
      - lnls-sirius.com.br 
      - abtlus.org.br
    dns:
      - 10.128.255.7
      - 10.0.0.71
      - 10.0.0.72
    deploy:
      placement:
        constraints:
          - node.hostname == CA-RaCtrl-CO-Srv-1
      replicas: 1
      restart_policy:
        condition: on-failure
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock

  kafkacat:
    image: confluentinc/cp-kafkacat
    command: sleep infinity
    dns_search:
      - lnls-sirius.com.br 
      - abtlus.org.br
    dns:
      - 10.128.255.7
      - 10.0.0.71
      - 10.0.0.72
    deploy:
      placement:
        constraints:
          - node.hostname == CA-RaCtrl-CO-Srv-1
      replicas: 1
      restart_policy:
        condition: on-failure

networks:
  host:
    external:
      name: "host"
